Vercel 사용 서버 구현 - 집에서, 시간 되면 여기서
vs
FastAPI -> Backend
Vercel -> Frontend

구조
_fastapi_ app
 ㄴ main.py  --> import , get-post방식 통신(flask 와 비슷)
 ㄴ requirements.txt --> fastapi , uvicorn 버전 체크?



1. main.py 
from fastapi import FastAPI
from pydantic import BaseModel

app = FastAPI()

class Item(BaseModel):
    name: str

# GET 요청 테스트
@app.get("/hello")
def hello():
    return {"message": "Hello from FastAPI!"}

# POST 요청 테스트
@app.post("/echo")
def echo(item: Item):
    return {"you_sent": item.dict()}


2. requirements.txt 
fastapi==0.111.1
uvicorn==0.24.0


3. venv, FastAPI 설치하기 
# 가상환경 생성
python -m venv venv
venv\Scripts\activate

# FastAPI 설치
pip install -r requirements.txt


4. 테스트 (bash)
uvicorn main:app --reload
{message" : "HI}     // def hello() return {"message"} 키가 message 


curl -X POST http://127.0.0.1:8000/echo -H "Content-Type: application/json" -d "{\"name\":\"kim\"}"
(json)
{"you_sent":{"name":"kim"}}


! 백엔드 서버 完 ! 



!  REACT 서버 및 파일구조 ! 
react 대충 설치 후

git bash 열어서 react 파일 만들기 ㅇㅇ\\
npm create vite@latest your_file_name -- --template react-ts

$ code .  
: 
code → VS Code 실행 명령어
. → 현재 디렉토리 경로를 VS Code에서 열라는 의미
즉, 터미널에서 $ code .를 입력하면 현재 폴더를 VS Code에서 바로 열 수 있음
조건
터미널에서 사용하려면 VS Code가 설치되어 있어야 하고,
code 명령어가 PATH 환경 변수에 등록되어 있어야 함
VS Code에서는 Command Palette → Shell Command: Install 'code' command in PATH 선택하면 등록 가능
vsCode 열림 ㅇㅇ

https://github.com/reactjs/ko.react.dev
react 한국어


tsconfg.node , tsconfig.json -> ts 환경설정, ts 양식 설정 가능 
    "noUnusedLocals": false,
    "noUnusedParameters": false,
-> 코딩 시 자유도 올라감 
의존성 주입한 내역도 확인가능  

전체 파일구조 
my-app/
 ├─ index.html			v
 ├─ package.json
 ├─ vite.config.js
 └─ src/
     ├─ main.jsx			v  -  JS  - ReactDOM ReactDOM으로 렌더링:
     ├─ App.jsx ~=~ tsx?		v  -  JS  App.jsx에서 RanLunchMenu를 불러와서 사용
     └─ RanLunchMenu.jsx		v
~ > JAVA 와 흡사하다.











010 4595 6530 - 오후 담임선생님 전화번호

이번 주 서버하나 파서 git에 올리기...






shorturl.at/1GzaD
shorturl.at/96aYt
